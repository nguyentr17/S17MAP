shape_untimed_sec$timerDisplay = as.factor(shape_untimed_sec$timerDisplay)
shape_untimed_sec$matchingScheme = as.factor(shape_untimed_sec$matchingScheme)
shape_untimed_sec$timerDisplay = as.factor(shape_untimed_sec$timerDisplay)
shape_untimed_sec$numErrors = as.numeric(shape_untimed_sec$numErrors)
##groupID_count <- count_(shape_untimed_sec,"groupID")
group_6002<-shape_untimed_sec[like(groupID,"6002")]
shape_HotchkissStudent16 <-shape_untimed_sec[shape_untimed_sec$groupID=="HotchkissStudent16",]
##as.data.frame(table($groupID))
##tb <- tb[order(-tb$Freq),]
##tb <- tb[tb$Freq > 25,]
plot1 = ggplot(data = shape_untimed_truncate, aes(x=matchingScheme, y=timeUsedPerShape)) + geom_boxplot()  +  scale_y_log10() + theme(legend.position="top") + labs(title=paste("n=",dim(shape_untimed_truncate)[1]))
plot2 = ggplot(data = group_6002, aes(x=matchingScheme, y=timeUsedPerShape)) + geom_boxplot()  + scale_y_log10() + theme(legend.position="top") + labs(title=paste("n=",dim(group_6002)[1]))
grid.arrange(plot1, plot2, ncol=2)
mod1 <- lm(errorPerShape ~ matchingScheme, data = group_6002)
mod2 <- lm(errorPerShape ~ timerDisplay, data = group_6002)
mod3 <- lm(errorPerShape ~ matchingScheme + timerDisplay, data = group_6002)
summary(mod1)
summary(mod2)
summary(mod3)
plot3 <- ggplot(data = group_6002, aes(x=matchingScheme, y=errorPerShape)) + geom_boxplot() + geom_point(position = "jitter")  + theme(legend.position="top") + labs(title=paste("n=",dim(shape_untimed_sec)[1]))+ylim(0,2)
plot4 <- ggplot(data = group_6002, aes(x=matchingScheme, y=errorPerShape)) +  geom_boxplot()  + aes(colour=timerDisplay) + theme(legend.position="top") + labs(title="") +ylim(0,2)
grid.arrange(plot3, plot4, ncol=2)
plot3 <- ggplot(data = group_6002, aes(x=matchingScheme, y=errorPerShape)) + geom_boxplot()  + theme(legend.position="top") + labs(title=paste("n=",dim(shape_untimed_sec)[1]))+ylim(0,2)
plot4 <- ggplot(data = group_6002, aes(x=matchingScheme, y=errorPerShape)) +  geom_boxplot()  + aes(colour=timerDisplay) + theme(legend.position="top") + labs(title="") +ylim(0,2)
grid.arrange(plot3, plot4, ncol=2)
plot3 <- ggplot(data = group_6002, aes(x=matchingScheme, y=errorPerShape)) + geom_boxplot()  + theme(legend.position="top") + labs(title=paste("n=",dim(shape_untimed_sec)[1]))+ylim(0,2)
plot4 <- ggplot(data = group_6002, aes(x=matchingScheme, y=errorPerShape)) +  geom_boxplot()  + aes(colour=timerDisplay) + theme(legend.position="top")  +ylim(0,2)
grid.arrange(plot3, plot4, ncol=2)
plot3 <- ggplot(data = group_6002, aes(x=matchingScheme, y=errorPerShape)) + geom_boxplot()  + theme(legend.position="top") + labs(title=paste("n=",dim(shape_untimed_sec)[1]))+ylim(0,2)
plot4 <- ggplot(data = group_6002, aes(x=matchingScheme, y=errorPerShape)) +  geom_boxplot()  + aes(colour=timerDisplay) + theme(legend.position="right") + labs(title="") +ylim(0,2)
grid.arrange(plot3, plot4, ncol=2)
plot3 <- ggplot(data = group_6002, aes(x=matchingScheme, y=errorPerShape)) + geom_boxplot()  + theme(legend.position="top") + labs(title=paste("n=",dim(shape_untimed_sec)[1]))+ylim(0,2)
plot4 <- ggplot(data = group_6002, aes(x=matchingScheme, y=errorPerShape)) +  geom_boxplot()  + aes(colour=timerDisplay) + theme(legend.position="top") + labs(title="") +ylim(0,2)
grid.arrange(plot3, plot4, ncol=2)
plot3 <- ggplot(data = group_6002, aes(x=matchingScheme, y=errorPerShape)) + geom_boxplot()  + theme(legend.position="top") + labs(title=paste("n=",dim(shape_untimed_sec)[1]))+ylim(0,1.5)
plot4 <- ggplot(data = group_6002, aes(x=matchingScheme, y=errorPerShape)) +  geom_boxplot()  + aes(colour=timerDisplay) + theme(legend.position="top") + labs(title="") +ylim(0,1.5)
grid.arrange(plot3, plot4, ncol=2)
summary(group_6002$errorPerRate[group_6002$matchingScheme="both" & group_6002$timerDisplay=1,])
summary(group_6002$errorPerRate[group_6002$matchingScheme=="both" & group_6002$timerDisplay==1,])
summary(group_6002$errorPerRate[group_6002$timerDisplay==1,])
(group_6002$errorPerRate[group_6002$timerDisplay==1,])
(group_6002$errorPerShape[group_6002$timerDisplay==1,])
(group_6002$errorPerShape[,group_6002$timerDisplay==1])
(group_6002[,group_6002$timerDisplay==1]$errorPerShape)
(group_6002[group_6002$timerDisplay==1,]$errorPerShape)
summary(group_6002[group_6002$timerDisplay==1,]$errorPerShape)
summary(group_6002[group_6002$timerDisplay==1 & group_6002$matchingScheme=="both",]$errorPerShape)
MAT_209<-shape_untimed_sec[like(groupID,"MAT209")]
MAT_209<-shape_untimed_sec[like(tolower(groupID),"mat209")]
plot5 <- ggplot(data = MAT_209, aes(x=matchingScheme, y=errorPerShape)) + geom_boxplot()  + theme(legend.position="top") + labs(title=paste("n=",dim(shape_untimed_sec)[1]))+ylim(0,1.5)
plot6 <- ggplot(data = MAT_209, aes(x=matchingScheme, y=errorPerShape)) +  geom_boxplot()  + aes(colour=timerDisplay) + theme(legend.position="top") + labs(title="") +ylim(0,1.5)
grid.arrange(plot5, plot6, ncol=2)
mat_209 <- grepl("mat209", groupID, ignore.case = TRUE)
mat_209 <- grepl("mat209", shape_untimed_sec$groupID, ignore.case = TRUE)
table(mat_209)
mod1 <- lm(errorPerShape ~ matchingScheme, data = group_6002)
mod2 <- lm(errorPerShape ~ timerDisplay, data = group_6002)
mod3 <- lm(errorPerShape ~ matchingScheme + timerDisplay, data = group_6002)
summary(mod1)
summary(mod2)
summary(mod3)
mod1 <- lm(errorPerShape ~ matchingScheme, data = MAT_209)
mod2 <- lm(errorPerShape ~ timerDisplay, data = MAT_209)
table(MAT_209$timerDisplay)
plot5=ggplot(data = shape_untimed_truncate, aes(x=timerDisplay, y=timeUsedPerShape)) + geom_boxplot()  + aes(colour=matchingScheme) + scale_y_log10() + theme(legend.position="top") + labs(title=paste("n=",dim(shape_untimed_truncate)[1]))
plot6=ggplot(data = group_6002, aes(x=timerDisplay, y=timeUsedPerShape)) + geom_boxplot()  + aes(colour=matchingScheme) + scale_y_log10() + theme(legend.position="top") + labs(title=paste("n=",dim(group_6002)[1]))
grid.arrange(plot5,plot6,ncol=2)
mod1 <- lm(timeUsedPerShape ~ matchingScheme, data = shape_untimed_truncate)
mod2 <- lm(timeUsedPerShape ~ matchingScheme, data = group_6002)
mod3 <- lm(timeUsedPerShape ~ matchingScheme + timerDisplay, data = shape_untimed_truncate)
mod4 <- lm(timeUsedPerShape ~ matchingScheme + timerDisplay, data = group_6002)
summary(mod1)
summary(mod2)
summary(mod3)
summary(mod4)
plot1 = ggplot(data = shape_untimed_truncate, aes(x=timerDisplay, y=timeUsedPerShape)) + geom_boxplot()  +  scale_y_log10() + theme(legend.position="top") + labs(title=paste("n=",dim(shape_untimed_truncate)[1]))
plot2 = ggplot(data = group_6002, aes(x=timerDisplay, y=timeUsedPerShape)) + geom_boxplot()  + scale_y_log10() + theme(legend.position="top") + labs(title=paste("n=",dim(group_6002)[1]))
grid.arrange(plot1, plot2, ncol=2)
mod1 <- lm(timeUsedPerShape ~ matchingScheme, data = shape_untimed_truncate)
mod2 <- lm(timeUsedPerShape ~ matchingScheme, data = group_6002)
summary(mod1)
summary(mod2)
plot1 = ggplot(data = shape_untimed_truncate, aes(x=matchingScheme, y=timeUsedPerShape)) + geom_boxplot()  +  scale_y_log10() + theme(legend.position="top") + labs(title=paste("n=",dim(shape_untimed_truncate)[1]))
plot2 = ggplot(data = group_6002, aes(x=matchingScheme, y=timeUsedPerShape)) + geom_boxplot()  + scale_y_log10() + theme(legend.position="top") + labs(title=paste("n=",dim(group_6002)[1]))
grid.arrange(plot1, plot2, ncol=2)
mod1 <- lm(timeUsedPerShape ~ timerDisplay, data = shape_untimed_truncate)
mod2 <- lm(timeUsedPerShape ~ timerDisplay, data = group_6002)
summary(mod1)
summary(mod2)
mod3 <- lm(timeUsedPerShape ~ timerDisplay, data = shape_untimed_truncate)
mod4 <- lm(timeUsedPerShape ~ timerDisplay, data = group_6002)
summary(mod3)
summary(mod4)
plot3 = ggplot(data = shape_untimed_truncate, aes(x=timerDisplay, y=timeUsedPerShape)) + geom_boxplot()  +  scale_y_log10() + theme(legend.position="top") + labs(title=paste("n=",dim(shape_untimed_truncate)[1]))
plot4 = ggplot(data = group_6002, aes(x=timerDisplay, y=timeUsedPerShape)) + geom_boxplot()  + scale_y_log10() + theme(legend.position="top") + labs(title=paste("n=",dim(group_6002)[1]))
grid.arrange(plot1, plot2, ncol=2)
plot3 = ggplot(data = shape_untimed_truncate, aes(x=timerDisplay, y=timeUsedPerShape)) + geom_boxplot()  +  scale_y_log10() + theme(legend.position="top") + labs(title=paste("n=",dim(shape_untimed_truncate)[1]))
plot4 = ggplot(data = group_6002, aes(x=timerDisplay, y=timeUsedPerShape)) + geom_boxplot()  + scale_y_log10() + theme(legend.position="top") + labs(title=paste("n=",dim(group_6002)[1]))
grid.arrange(plot1, plot2, ncol=2)
plot3 = ggplot(data = shape_untimed_truncate, aes(x=timerDisplay, y=timeUsedPerShape)) + geom_boxplot()  +  scale_y_log10() + theme(legend.position="top") + labs(title=paste("n=",dim(shape_untimed_truncate)[1]))
plot4 = ggplot(data = group_6002, aes(x=timerDisplay, y=timeUsedPerShape)) + geom_boxplot()  + scale_y_log10() + theme(legend.position="top") + labs(title=paste("n=",dim(group_6002)[1]))
grid.arrange(plot3, plot4, ncol=2)
shape_untimed_sec <- mutate(shape_untimed_sec, timeUsedPerShape=TimeUsedSec / as.numeric(numShapes))
shape_untimed_sec = mutate(shape_untimed_sec, errorPerShape=shape_untimed_sec$numErrors / shape_untimed_sec$numShapes)
shape_untimed_sec <- mutate(shape_untimed_sec, timeUsedPerShape=TimeUsedSec / as.numeric(numShapes))
shape_untimed_sec = mutate(shape_untimed_sec, errorPerShape=shape_untimed_sec$numErrors / as.numeric(numShapes))
View(shape_untimed_sec)
shape_untimed_sec <- mutate(shape_untimed_sec, timeUsedPerShape=TimeUsedSec / numShapes)
shape_untimed_sec = mutate(shape_untimed_sec, errorPerShape=shape_untimed_sec$numErrors / numShapes)
shape_untimed_sec <- mutate(shape_untimed_sec, timeUsedPerShape=TimeUsedSec/numShapes)
shape_untimed_sec = mutate(shape_untimed_sec, errorPerShape=shape_untimed_sec$numErrors/numShapes)
shape_untimed$timeUsed = as.numeric(shape_untimed$timeUsed)
shape_untimed$numShapes = as.numeric(shape_untimed$numShapes)
shape_untimed_sec <-mutate(shape_untimed, TimeUsedSec = shape_untimed$timeUsed/1000)
shape_untimed_sec <- mutate(shape_untimed_sec, timeUsedPerShape=TimeUsedSec/numShapes)
shape_untimed_sec = mutate(shape_untimed_sec, errorPerShape=shape_untimed_sec$numErrors/numShapes)
shape_untimed_sec <- mutate(shape_untimed_sec, timeUsedPerShape=TimeUsedSec/numShapes)
shape_untimed_sec = mutate(shape_untimed_sec, errorPerShape=numErrors/numShapes)
shape_untimed_sec <- mutate(shape_untimed_sec, timeUsedPerShape=TimeUsedSec/numShapes)
shape_untimed_sec = mutate(shape_untimed_sec, errorPerShape=numErrors/numShapes)
shape_untimed_sec <- mutate(shape_untimed_sec, timeUsedPerShape=(TimeUsedSec/numShapes))
shape_untimed_sec = mutate(shape_untimed_sec, errorPerShape=(numErrors/numShapes))
shape_untimed_sec <- mutate(shape_untimed_sec, timeUsedPerShape=(TimeUsedSec/numShapes))
shape_untimed_sec = mutate(shape_untimed_sec,errorPerShape=(numErrors/numShapes))
shape_untimed_sec <- mutate(shape_untimed_sec, timeUsedPerShape=(TimeUsedSec/numShapes))
shape_untimed_sec <- mutate(shape_untimed_sec,errorPerShape=(numErrors/numShapes))
shape_untimed_sec <- mutate(shape_untimed_sec, timeUsedPerShape=(TimeUsedSec/numShapes))
shape_untimed_sec <- mutate(shape_untimed_sec,errorPerShape=(numErrors/numShapes))
shape_untimed_sec <- mutate(shape_untimed_sec, timeUsedPerShape=(TimeUsedSec/numShapes))
shape_untimed_sec <- mutate(shape_untimed_sec,errorPerShape=(as.numeric(numErrors)/as.numeric(numShapes)))
knitr::opts_chunk$set(echo = TRUE)
temp <- list.files(pattern = '/Gender_groups/*group.csv')
data <- rbind(read.csv(temp[1])[-c(1)], read.csv(temp[2])[-c(1)])
knitr::opts_chunk$set(echo = TRUE)
library(plyr)
library(dplyr)
library(rmarkdown)
library(rprojroot)
library(ggplot2)
library(mosaic)
library(data.table)
library(xlsx)
Original <- read.csv("Original.csv")
shape <- Original
shape_untime <- shape[shape$requestedTime==0,]
shape_untimed <- shape_untime[shape_untime$timeUsed!=0,]
shape_untimed$numShapes <- as.factor(shape_untimed$numShapes)
shape_untimed$matchingScheme <- as.factor(shape_untimed$matchingScheme)
shape_untimed$requestedTime <- as.factor(shape_untimed$requestedTime)
shape_untimed$timeUsed <- as.numeric(shape_untimed$timeUsed)
shape_untimed$timerDisplay <- as.factor(shape_untimed$timerDisplay)
shape_untimed$numErrors <- as.numeric(shape_untimed$numErrors)
shape_untimed <- mutate(shape_untimed, TimeUsedSec = shape_untimed$timeUsed/1000)
gender <- filter(shape_untimed, tolower(strtrim(shape_untimed$v1label,3))=="gen" |
tolower(strtrim(shape_untimed$v1label,3))=="sex" |
tolower(strtrim(shape_untimed$v1label,4))=="male" |
tolower(strtrim(shape_untimed$v1label,1))=="f")
case <- (tolower(strtrim(gender$v1value,1)) == "m") & (tolower(strtrim(gender$v2value,1)) =="f")
gender1 <- gender[(strtrim(gender$v1value,1) != "1") &
(gender$v1value != "2") &
(gender$v1label != "Gender\rOrder") &
(gender$v1label != "female\rorder") &
(gender$v1value != "0") &
(tolower(gender$v1value) != "morf") &
(gender$studentID != "mb") &
(gender$studentID != "31207") &
(gender$v1value != "cat") &
(gender$studentID != "3659") &
(tolower(gender$v1value) != "attempt") &
(!case),]
gender1 <- mutate(gender1,
gender = as.factor(ifelse(
pmax((tolower(strtrim(gender1$v1label,1)) == "m"),
(tolower(strtrim(gender1$v1value,1)) =="m")),
1,
ifelse(pmax(tolower(strtrim(gender1$v1label,1)) == "f",
(tolower(strtrim(gender1$v1value,1)) =="f")),
0,
NA))))
gender2 <- na.omit(gender1)
tb <- as.data.frame(table(gender2$groupID))
##Select groups that are under size 50
tb2 <- tb[tb$Freq >= 5 & tb$Freq <= 50,]
tb_gender <-
gender_feqless50 <- filter(gender2,
##Create a vector of groupID's whose size is between 25 and 50
selected_groupID <- as.character(tb2$Var1)
```{r}
temp <- list.files(pattern = '/Gender_groups/*group.csv')
temp <- list.files(pattern = 'Gender_groups/*group.csv')
setwd('/Gender_groups')
setwd('../Gender_groups')
setwd('./Gender_groups')
setwd('./Gender_groups')
temp <- list.files(pattern = '*group.csv')
data <- rbind(read.csv(temp[1])[-c(1)], read.csv(temp[2])[-c(1)])
data <- rbind(data, read.csv(temp[3])[-c(1)])
data <- rbind(data, read.csv(temp[4])[-c(1)])
data <- rbind(data, read.csv(temp[5])[-c(1)])
data <- rbind(data, read.csv(temp[6])[-c(1)])
data <- rbind(data, read.csv(temp[7])[-c(1)])
data <- rbind(data, read.csv(temp[8])[-c(1)])
data <- rbind(data, read.csv(temp[9])[-c(1)])
data <- rbind(data, read.csv(temp[10])[-c(1)])
data <- rbind(data, read.csv(temp[11])[-c(1)])
data <- rbind(data, read.csv(temp[12])[-c(1)])
data <- rbind(data, read.csv(temp[13])[-c(1)])
data <- rbind(data, read.csv(temp[14])[-c(1)])
data <- rbind(data, read.csv(temp[15])[-c(1)])
data <- rbind(data, read.csv(temp[16])[-c(1)])
data <- rbind(data, read.csv(temp[17])[-c(1)])
data <- rbind(data, read.csv(temp[18])[-c(1)])
temp <- list.files(pattern = './Gender_groups/*group.csv')
setwd('/Users/Yuan/S17MAP/Jinlin-Yuan/Gender_groups')
setwd('/Users/Yuan/S17MAP/Jinlin-Yuan/Gender_groups')
setwd('S17MAP/Jinlin-Yuan/Gender_groups')
temp <- list.files(pattern = '*group.csv')
data <- rbind(read.csv(temp[1])[-c(1)], read.csv(temp[2])[-c(1)])
data <- rbind(data, read.csv(temp[3])[-c(1)])
data <- rbind(data, read.csv(temp[4])[-c(1)])
data <- rbind(data, read.csv(temp[5])[-c(1)])
data <- rbind(data, read.csv(temp[6])[-c(1)])
data <- rbind(data, read.csv(temp[7])[-c(1)])
data <- rbind(data, read.csv(temp[8])[-c(1)])
data <- rbind(data, read.csv(temp[9])[-c(1)])
data <- rbind(data, read.csv(temp[10])[-c(1)])
data <- rbind(data, read.csv(temp[11])[-c(1)])
data <- rbind(data, read.csv(temp[12])[-c(1)])
data <- rbind(data, read.csv(temp[13])[-c(1)])
data <- rbind(data, read.csv(temp[14])[-c(1)])
data <- rbind(data, read.csv(temp[15])[-c(1)])
data <- rbind(data, read.csv(temp[16])[-c(1)])
data <- rbind(data, read.csv(temp[17])[-c(1)])
data <- rbind(data, read.csv(temp[18])[-c(1)])
female <- data[data$gender == 0,]$TimeUsedSec
male <- data[data$gender == 1,]$TimeUsedSec
pvl2 <- round(t.test(female, male)$p.value, digits = 3)
boxplot(TimeUsedSec ~ gender,data=data, main=paste("n=", dim(data)[1], ", two sided pval=", pvl2), xlab="Gender (1=Male, 0=Female)", ylab="Time Used Seconds")
knitr::opts_chunk$set(echo = TRUE)
library(plyr)
library(dplyr)
library(rmarkdown)
library(rprojroot)
library(ggplot2)
library(mosaic)
library(data.table)
library(xlsx)
Original <- read.csv("Original.csv")
shape <- Original
shape_untime <- shape[shape$requestedTime==0,]
shape_untimed <- shape_untime[shape_untime$timeUsed!=0,]
shape_untimed$numShapes <- as.factor(shape_untimed$numShapes)
shape_untimed$matchingScheme <- as.factor(shape_untimed$matchingScheme)
shape_untimed$requestedTime <- as.factor(shape_untimed$requestedTime)
shape_untimed$timeUsed <- as.numeric(shape_untimed$timeUsed)
shape_untimed$timerDisplay <- as.factor(shape_untimed$timerDisplay)
shape_untimed$numErrors <- as.numeric(shape_untimed$numErrors)
shape_untimed <- mutate(shape_untimed, TimeUsedSec = shape_untimed$timeUsed/1000)
gender <- filter(shape_untimed, tolower(strtrim(shape_untimed$v1label,3))=="gen" |
tolower(strtrim(shape_untimed$v1label,3))=="sex" |
tolower(strtrim(shape_untimed$v1label,4))=="male" |
tolower(strtrim(shape_untimed$v1label,1))=="f")
case <- (tolower(strtrim(gender$v1value,1)) == "m") & (tolower(strtrim(gender$v2value,1)) =="f")
gender1 <- gender[(strtrim(gender$v1value,1) != "1") &
(gender$v1value != "2") &
(gender$v1label != "Gender\rOrder") &
(gender$v1label != "female\rorder") &
(gender$v1value != "0") &
(tolower(gender$v1value) != "morf") &
(gender$studentID != "mb") &
(gender$studentID != "31207") &
(gender$v1value != "cat") &
(gender$studentID != "3659") &
(tolower(gender$v1value) != "attempt") &
(!case),]
gender1 <- mutate(gender1,
gender = as.factor(ifelse(
pmax((tolower(strtrim(gender1$v1label,1)) == "m"),
(tolower(strtrim(gender1$v1value,1)) =="m")),
1,
ifelse(pmax(tolower(strtrim(gender1$v1label,1)) == "f",
(tolower(strtrim(gender1$v1value,1)) =="f")),
0,
NA))))
gender2 <- na.omit(gender1)
tb <- as.data.frame(table(gender2$groupID))
##Select groups that are under size 50
tb2 <- tb[tb$Freq >= 5 & tb$Freq <= 50,]
tb_gender <-
gender_feqless50 <- filter(gender2,
##Create a vector of groupID's whose size is between 25 and 50
selected_groupID <- as.character(tb2$Var1)
temp <- list.files(pattern = '*group.csv')
data <- rbind(read.csv(temp[1])[-c(1)], read.csv(temp[2])[-c(1)])
data <- rbind(data, read.csv(temp[3])[-c(1)])
data <- rbind(data, read.csv(temp[4])[-c(1)])
data <- rbind(data, read.csv(temp[5])[-c(1)])
data <- rbind(data, read.csv(temp[6])[-c(1)])
data <- rbind(data, read.csv(temp[7])[-c(1)])
data <- rbind(data, read.csv(temp[8])[-c(1)])
data <- rbind(data, read.csv(temp[9])[-c(1)])
data <- rbind(data, read.csv(temp[10])[-c(1)])
data <- rbind(data, read.csv(temp[11])[-c(1)])
data <- rbind(data, read.csv(temp[12])[-c(1)])
data <- rbind(data, read.csv(temp[13])[-c(1)])
data <- rbind(data, read.csv(temp[14])[-c(1)])
data <- rbind(data, read.csv(temp[15])[-c(1)])
data <- rbind(data, read.csv(temp[16])[-c(1)])
data <- rbind(data, read.csv(temp[17])[-c(1)])
data <- rbind(data, read.csv(temp[18])[-c(1)])
female <- data[data$gender == 0,]$TimeUsedSec
male <- data[data$gender == 1,]$TimeUsedSec
pvl2 <- round(t.test(female, male)$p.value, digits = 3)
boxplot(TimeUsedSec ~ gender,data=data, main=paste("n=", dim(data)[1], ", two sided pval=", pvl2), xlab="Gender (1=Male, 0=Female)", ylab="Time Used Seconds")
knitr::opts_chunk$set(echo = TRUE)
library(plyr)
library(dplyr)
library(rmarkdown)
library(rprojroot)
library(ggplot2)
library(mosaic)
library(data.table)
library(xlsx)
Original <- read.csv("Original.csv")
shape <- Original
shape_untime <- shape[shape$requestedTime==0,]
shape_untimed <- shape_untime[shape_untime$timeUsed!=0,]
shape_untimed$numShapes <- as.factor(shape_untimed$numShapes)
shape_untimed$matchingScheme <- as.factor(shape_untimed$matchingScheme)
shape_untimed$requestedTime <- as.factor(shape_untimed$requestedTime)
shape_untimed$timeUsed <- as.numeric(shape_untimed$timeUsed)
shape_untimed$timerDisplay <- as.factor(shape_untimed$timerDisplay)
shape_untimed$numErrors <- as.numeric(shape_untimed$numErrors)
shape_untimed <- mutate(shape_untimed, TimeUsedSec = shape_untimed$timeUsed/1000)
gender <- filter(shape_untimed, tolower(strtrim(shape_untimed$v1label,3))=="gen" |
tolower(strtrim(shape_untimed$v1label,3))=="sex" |
tolower(strtrim(shape_untimed$v1label,4))=="male" |
tolower(strtrim(shape_untimed$v1label,1))=="f")
case <- (tolower(strtrim(gender$v1value,1)) == "m") & (tolower(strtrim(gender$v2value,1)) =="f")
gender1 <- gender[(strtrim(gender$v1value,1) != "1") &
(gender$v1value != "2") &
(gender$v1label != "Gender\rOrder") &
(gender$v1label != "female\rorder") &
(gender$v1value != "0") &
(tolower(gender$v1value) != "morf") &
(gender$studentID != "mb") &
(gender$studentID != "31207") &
(gender$v1value != "cat") &
(gender$studentID != "3659") &
(tolower(gender$v1value) != "attempt") &
(!case),]
gender1 <- mutate(gender1,
gender = as.factor(ifelse(
pmax((tolower(strtrim(gender1$v1label,1)) == "m"),
(tolower(strtrim(gender1$v1value,1)) =="m")),
1,
ifelse(pmax(tolower(strtrim(gender1$v1label,1)) == "f",
(tolower(strtrim(gender1$v1value,1)) =="f")),
0,
NA))))
gender2 <- na.omit(gender1)
tb <- as.data.frame(table(gender2$groupID))
##Select groups that are under size 50
tb2 <- tb[tb$Freq >= 5 & tb$Freq <= 50,]
##Create a vector of groupID's whose size is between 25 and 50
selected_groupID <- as.character(tb2$Var1)
par(mar=c(1,1,1,1))
par(mfrow = c(4,5))
groupName <- c()
pvalues <- c()
for (i in 1:length(selected_groupID)) {
female <- gender2[gender2$groupID == selected_groupID[i] & gender2$gender == 0,]$TimeUsedSec
male <- gender2[gender2$groupID == selected_groupID[i] & gender2$gender == 1,]$TimeUsedSec
if (length(female) > 1 & length(male) > 1) {
groupName <- cbind(groupName, selected_groupID[i])
p <- round(t.test(female, male)$p.value, digits = 3)
pvalues <- cbind(pvalues, p)
data1 <- gender2[gender2$groupID == selected_groupID[i],]
if (p < 0.1) {
if (mean(female) < mean(male)) {
boxplot(TimeUsedSec ~ gender,data=data1, col="green", main=paste("n=", dim(data1)[1], ", pval=", p), xlab="Gender (1=Male, 0=Female)", ylab="Time Used Seconds")
} else {
boxplot(TimeUsedSec ~ gender,data=data1, col="red", main=paste("n=", dim(data1)[1], ", pval=", p), xlab="Gender (1=Male, 0=Female)", ylab="Time Used Seconds")
}
} else {
boxplot(TimeUsedSec ~ gender,data=data1, main=paste("n=", dim(data1)[1], ", pval=", p), xlab="Gender (1=Male, 0=Female)", ylab="Time Used Seconds")
}
write.csv(gender2[gender2$groupID == selected_groupID[i],], file =paste(selected_groupID[i], "group.csv"))
}
}
par(mfrow = c(4,5))
groupName <- c()
pvalues <- c()
for (i in 1:length(selected_groupID)) {
female <- gender2[gender2$groupID == selected_groupID[i] & gender2$gender == 0,]$TimeUsedSec
male <- gender2[gender2$groupID == selected_groupID[i] & gender2$gender == 1,]$TimeUsedSec
if (length(female) > 1 & length(male) > 1) {
groupName <- cbind(groupName, selected_groupID[i])
p <- round(t.test(female, male)$p.value, digits = 3)
pvalues <- cbind(pvalues, p)
data1 <- gender2[gender2$groupID == selected_groupID[i],]
if (p < 0.1) {
if (mean(female) < mean(male)) {
boxplot(TimeUsedSec ~ gender,data=data1, col="green", main=paste("n=", dim(data1)[1], ", pval=", p), xlab="Gender (1=Male, 0=Female)", ylab="Time Used Seconds")
} else {
boxplot(TimeUsedSec ~ gender,data=data1, col="red", main=paste("n=", dim(data1)[1], ", pval=", p), xlab="Gender (1=Male, 0=Female)", ylab="Time Used Seconds")
}
} else {
boxplot(TimeUsedSec ~ gender,data=data1, main=paste("n=", dim(data1)[1], ", pval=", p), xlab="Gender (1=Male, 0=Female)", ylab="Time Used Seconds")
}
write.csv(gender2[gender2$groupID == selected_groupID[i],], file =paste(selected_groupID[i], "group.csv"))
}
}
temp <- list.files(pattern = '*group.csv')
data <- rbind(read.csv(temp[1])[-c(1)], read.csv(temp[2])[-c(1)])
data <- rbind(data, read.csv(temp[3])[-c(1)])
data <- rbind(data, read.csv(temp[4])[-c(1)])
data <- rbind(data, read.csv(temp[5])[-c(1)])
data <- rbind(data, read.csv(temp[6])[-c(1)])
data <- rbind(data, read.csv(temp[7])[-c(1)])
data <- rbind(data, read.csv(temp[8])[-c(1)])
data <- rbind(data, read.csv(temp[9])[-c(1)])
data <- rbind(data, read.csv(temp[10])[-c(1)])
data <- rbind(data, read.csv(temp[11])[-c(1)])
data <- rbind(data, read.csv(temp[12])[-c(1)])
data <- rbind(data, read.csv(temp[13])[-c(1)])
data <- rbind(data, read.csv(temp[14])[-c(1)])
data <- rbind(data, read.csv(temp[15])[-c(1)])
data <- rbind(data, read.csv(temp[16])[-c(1)])
data <- rbind(data, read.csv(temp[17])[-c(1)])
data <- rbind(data, read.csv(temp[18])[-c(1)])
female <- data[data$gender == 0,]$TimeUsedSec
male <- data[data$gender == 1,]$TimeUsedSec
pvl2 <- round(t.test(female, male)$p.value, digits = 3)
boxplot(TimeUsedSec ~ gender,data=data, main=paste("n=", dim(data)[1], ", two sided pval=", pvl2), xlab="Gender (1=Male, 0=Female)", ylab="Time Used Seconds")
tb <- as.data.frame(table(gender2$groupID))
##Select groups that are under size 50
tb2 <- tb[tb$Freq >= 5 & tb$Freq <= 200,]
##Create a vector of groupID's whose size is between 25 and 50
selected_groupID <- as.character(tb2$Var1)
par(mar=c(1,1,1,1))
par(mfrow = c(5,5))
groupName <- c()
pvalues <- c()
for (i in 1:length(selected_groupID)) {
female <- gender2[gender2$groupID == selected_groupID[i] & gender2$gender == 0,]$TimeUsedSec
male <- gender2[gender2$groupID == selected_groupID[i] & gender2$gender == 1,]$TimeUsedSec
if (length(female) > 1 & length(male) > 1) {
groupName <- cbind(groupName, selected_groupID[i])
p <- round(t.test(female, male)$p.value, digits = 3)
pvalues <- cbind(pvalues, p)
data1 <- gender2[gender2$groupID == selected_groupID[i],]
if (p < 0.1) {
if (mean(female) < mean(male)) {
boxplot(TimeUsedSec ~ gender,data=data1, col="green", main=paste("n=", dim(data1)[1], ", pval=", p), xlab="Gender (1=Male, 0=Female)", ylab="Time Used Seconds")
} else {
boxplot(TimeUsedSec ~ gender,data=data1, col="red", main=paste("n=", dim(data1)[1], ", pval=", p), xlab="Gender (1=Male, 0=Female)", ylab="Time Used Seconds")
}
} else {
boxplot(TimeUsedSec ~ gender,data=data1, main=paste("n=", dim(data1)[1], ", pval=", p), xlab="Gender (1=Male, 0=Female)", ylab="Time Used Seconds")
}
write.csv(gender2[gender2$groupID == selected_groupID[i],], file =paste(selected_groupID[i], "group.csv"))
}
}
par(mar=c(1,1,1,1))
par(mfrow = c(6,6))
groupName <- c()
pvalues <- c()
for (i in 1:length(selected_groupID)) {
female <- gender2[gender2$groupID == selected_groupID[i] & gender2$gender == 0,]$TimeUsedSec
male <- gender2[gender2$groupID == selected_groupID[i] & gender2$gender == 1,]$TimeUsedSec
if (length(female) > 1 & length(male) > 1) {
groupName <- cbind(groupName, selected_groupID[i])
p <- round(t.test(female, male)$p.value, digits = 3)
pvalues <- cbind(pvalues, p)
data1 <- gender2[gender2$groupID == selected_groupID[i],]
if (p < 0.1) {
if (mean(female) < mean(male)) {
boxplot(TimeUsedSec ~ gender,data=data1, col="green", main=paste("n=", dim(data1)[1], ", pval=", p), xlab="Gender (1=Male, 0=Female)", ylab="Time Used Seconds")
} else {
boxplot(TimeUsedSec ~ gender,data=data1, col="red", main=paste("n=", dim(data1)[1], ", pval=", p), xlab="Gender (1=Male, 0=Female)", ylab="Time Used Seconds")
}
} else {
boxplot(TimeUsedSec ~ gender,data=data1, main=paste("n=", dim(data1)[1], ", pval=", p), xlab="Gender (1=Male, 0=Female)", ylab="Time Used Seconds")
}
write.csv(gender2[gender2$groupID == selected_groupID[i],], file =paste(selected_groupID[i], "group.csv"))
}
}
par(mar=c(1,1,1,1))
par(mfrow = c(6,5))
groupName <- c()
pvalues <- c()
for (i in 1:length(selected_groupID)) {
female <- gender2[gender2$groupID == selected_groupID[i] & gender2$gender == 0,]$TimeUsedSec
male <- gender2[gender2$groupID == selected_groupID[i] & gender2$gender == 1,]$TimeUsedSec
if (length(female) > 1 & length(male) > 1) {
groupName <- cbind(groupName, selected_groupID[i])
p <- round(t.test(female, male)$p.value, digits = 3)
pvalues <- cbind(pvalues, p)
data1 <- gender2[gender2$groupID == selected_groupID[i],]
if (p < 0.1) {
if (mean(female) < mean(male)) {
boxplot(TimeUsedSec ~ gender,data=data1, col="green", main=paste("n=", dim(data1)[1], ", pval=", p), xlab="Gender (1=Male, 0=Female)", ylab="Time Used Seconds")
} else {
boxplot(TimeUsedSec ~ gender,data=data1, col="red", main=paste("n=", dim(data1)[1], ", pval=", p), xlab="Gender (1=Male, 0=Female)", ylab="Time Used Seconds")
}
} else {
boxplot(TimeUsedSec ~ gender,data=data1, main=paste("n=", dim(data1)[1], ", pval=", p), xlab="Gender (1=Male, 0=Female)", ylab="Time Used Seconds")
}
write.csv(gender2[gender2$groupID == selected_groupID[i],], file =paste(selected_groupID[i], "group.csv"))
}
}
